apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.range_server.name }}
  # namespace: {{ .Values.range_server.name }}
  namespace: dev
  labels:
    app: {{ .Values.range_server.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.range_server.name }}
  serviceName: {{ .Values.range_server.name }}
  replicas: {{ .Values.range_server.count }}

  template:
    metadata:
      name: {{ .Values.range_server.name }}
      labels:
        app: {{ .Values.range_server.name }}
    spec:
      containers:
        - name: {{ .Values.range_server.name }}
          image: {{ printf "%s/%s:%s" .Values.range_server.image.registry .Values.range_server.image.repository .Values.range_server.image.tag}}
          imagePullPolicy: "Always"
          # command: ["cat", "/etc/range-server/range-server.yaml"]
          ports:
            - containerPort: 10911
              name: server
            - containerPort: 9898
              name: metrics
            # {{- range .Values.range_server.ports }}
            # - name: {{ .name }}
            #   containerPort: {{.port}}
            # {{- end }}
          volumeMounts:
            # - name: rs-data
              # mountPath: /data/range-server
            - name: config-volume
              mountPath: /etc/range-server
            - name: rs-data
              mountPath: /data
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.range_server.name }}-conf
        # - name: rs-data
        #   hostPath:
        #     path: /home/tpa/data2
        #     type: DirectoryOrCreate
      # volumes:
      #   - name: range-server
      #     configMap:
      #       name: {{ .Values.range_server.name }}-conf
      #       items:
      #       - key: {{ .Values.range_server.configmap_volumes.range_server.subPath }}
      #         path: {{ .Values.range_server.configmap_volumes.range_server.subPath }}
      #   - name: range-server-log
      #     configMap:
      #       name: {{ .Values.range_server.name }}-conf
      #       items:
      #       - key: {{ .Values.range_server.configmap_volumes.range_server_log.subPath }}
      #         path: {{ .Values.range_server.configmap_volumes.range_server_log.subPath }}

  volumeClaimTemplates:
    - metadata:
        name: rs-data
      spec:
        storageClassName: "standard"
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 15Gi
---
# apiVersion: v1
# kind: Service
# metadata:
#   name: {{ .Values.range_server.name }}
#   namespace: dev

# spec:
#   type: ClusterIP
#   selector:
#     app: {{ .Values.range_server.name }}
#   ports:
#     {{- range .Values.range_server.ports }}
#     - name: {{ .name }}
#       port: {{ .port }}
#       targetPort: {{ .port }}
#     {{- end }}


apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.range_server.name }}
  namespace: dev
  labels:
    app: {{ .Values.range_server.name }}
spec:
  type: ClusterIP
  selector:
    app: {{ .Values.range_server.name }}
  ports:
    - port: 10911
      name: server
    - port: 9898
      name: metrics
    # {{- range .Values.range_server.ports }}
    # - name: {{ .name }}
    #   port: {{ .port }}
    #   targetPort: {{ .port }}
    # {{- end }}
  selector:
    app: {{ .Values.range_server.name }}
