# Default values for range-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: elasticstream/range-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
    metric: 9898
    server: 10911

storage:
  mountPath: /data/store
  storageClassName: "standard"
  size: 15Gi

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

rsconfig:
  range_server_config: |-
    # Unit of interval in milliseconds
    tick: 100
    # Placement driver address
    placement-driver: "pd:12378"
    # Client configuration
    client:
      # Connect timeout duration in ticks
      connect-timeout: 10
      # IO timeout duration in ticks
      io-timeout: 10
      # Client ID
      client-id: ""
      # Max attempts in case of transparent retry
      max-attempt: 3
      # Heartbeat interval in ticks
      heartbeat-interval: 30
      # Refresh placement driver cluster interval in ticks
      refresh-pd-cluster-interval: 300
    # Server configuration
    server:
      # Advertise host address
      host: "range-server-0.range-server"
      # Listening port
      port: 10911
      # Number of Thread-per-Core Nodes
      worker-cpu-set: "1"
      uring:
        # Network io_uring queue depth
        queue-depth: 128
      # Connection idle duration in ticks
      connection-idle-duration: 60
      # grace period in ticks, after this period of time, disconnect lingering client connections
      grace-period: 120
      profiling:
        enable: false
        # profiler sampling frequency
        sampling-frequency: 1000
        # Generate flamegraph interval in seconds
        report-interval: 3000
        # Path to save flamegraph files: if a relative path is configured, it will be relative to current working directory;
        # If an absolute path is configured, the absolute path is used.
        report-path: "/tmp"
        # max backup reports
        max-report-backup: 3
    # Store configuration
    store:
      # Whether mkdirs if missing
      mkdirs-if-missing: true
      # Store directory
      path:
        # Base path of the store, containing lock, immutable properties and other configuration files
        base: "/data/store"
        # Directory of WAL segment files. It could be absolute or relative to `base`
        wal: "wal"
        # Directory of metadata RocksDB files. It could be absolute or relative to `base`
        metadata: "metadata"
      # 1GiB
      segment-size: 1073741824
      # Max block cache size
      max-cache-size: 1073741824
      # Preferred IO read size: 128KiB
      read-block-size: 131072
      # Pre-allocated number of segment files
      pre-allocate-segment-file-number: 2
      # The total size of Status::Read segment files
      # 100GiB
      total-segment-file-size: 10737418240
      # Policy to reclaim segment files
      reclaim-policy: "Delete"
      io-cpu: 2
      # io_uring setup
      uring:
        polling: true
        # IO io_uring queue depth
        queue-depth: 1024
        # Kernel SQ Poll thread will quit if it remains idle for 2 seconds.
        sqpoll-idle-ms: 2000
        # Bind the kernel's poll thread to the specified cpu.
        sqpoll-cpu: 1
        # Kernel thread pool size for bounded tasks. Note this thread pool is
        # shared with server `Node`s.
        max-bounded-worker: 2
        # Kernel thread pool size for unbounded tasks. Note this thread pool is
        # shared with server `Node`s.
        max-unbounded-worker: 2
      # RocksDB configuration items
      rocksdb:
        # Create column families if missing
        create-if-missing: true
        # Flush index entries of record-batch every `flush_threshold`
        flush-threshold: 32768
        # cpu-set for RocksDB threads to run on, sample value: "0-2,4-6,8"
        cpu-set: "0"

    replication:
      connection-pool-size: 2
      thread-count: 4

    observation:
      metrics:
        # Host address
        host: "0.0.0.0"
        # Listening port
        port: 9898

  range_server_log_config: |-
    refresh_rate: 30 seconds

    appenders:
      stdout:
        kind: console
        encoder:
          pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} | {({l}):5.5} | {f}:{L} — {t} {m}{n}"

      store:
        kind: rolling_file
        path: "logs/store.log"
        append: true
        encoder:
          pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} | {({l}):5.5} | {f}:{L} — {t} {m}{n}"
        policy:
          kind: compound
          trigger:
            kind: size
            limit: 16 mb
          roller:
            kind: fixed_window
            pattern: logs/archive/store.{}.log
            count: 10
            base: 0

      range-server:
        kind: rolling_file
        path: "logs/range-server.log"
        append: true
        encoder:
          pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} | {({l}):5.5} | {f}:{L} — {t} {m}{n}"
        policy:
          kind: compound
          trigger:
            kind: size
            limit: 16 mb
          roller:
            kind: fixed_window
            pattern: logs/archive/range-server.{}.log
            count: 10
            base: 0

    root:
      level: trace
      appenders:
        - stdout

    loggers:
      store:
        level: trace
        appenders:
          - store
        additive: false
      range_server:
        level: trace
        appenders:
          - range-server
        additive: false
      model:
        level: trace
        appenders:
          - range-server
        additive: false
      codec:
        level: trace
        appenders:
          - range-server
        additive: false
      transport:
        level: trace
        appenders:
          - range-server
        additive: false
      config:
        level: trace
        appenders:
          - range-server
        additive: false
      client:
        level: trace
        appenders:
          - range-server
        additive: false
      util:
        level: trace
        appenders:
          - range-server
        additive: false
      object_storage:
        level: trace
        appenders:
          - range-server
        additive: false
